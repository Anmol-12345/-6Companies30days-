class Solution {
public:
    int wordCount(vector<string>& startWords, vector<string>& targetWords) {
        unordered_set<string> startSet;
        
        for (const string& word : startWords) {
            string sortedWord = word;
            sort(sortedWord.begin(), sortedWord.end());
            startSet.insert(sortedWord);
        }
        
        int result = 0;
        
        for (const string& word : targetWords) {
            string sortedWord = word;
            sort(sortedWord.begin(), sortedWord.end());
            
            bool canForm = false;
            for (int i = 0; i < sortedWord.size(); i++) {
                string subWord = sortedWord.substr(0, i) + sortedWord.substr(i + 1);
                if (startSet.find(subWord) != startSet.end()) {
                    canForm = true;
                    break;
                }
            }
            
            if (canForm) {
                result++;
            }
        }
        
        return result;
    }
};
