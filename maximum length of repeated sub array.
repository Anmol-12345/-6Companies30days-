class Solution {
public:
    int findLength(vector<int>& nums1, vector<int>& nums2) {
         int n = nums1.size();
        int m = nums2.size();
        
        // dp[i][j] will be the length of longest common subarray ending with nums1[i-1] and nums2[j-1]
        vector<vector<int>> dp(n + 1, vector<int>(m + 1, 0));
        int maxLength = 0;

        // Fill the dp table
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= m; j++) {
                if (nums1[i - 1] == nums2[j - 1]) {
                    dp[i][j] = dp[i - 1][j - 1] + 1;
                    maxLength = max(maxLength, dp[i][j]);
                }
            }
        }
        
        return maxLength;
    }
};
